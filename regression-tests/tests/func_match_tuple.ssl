putip_ putc x =
  if x < 10
    putc (x + 48)
  else
    putip_ putc (x / 10)
    putc (48 + x % 10)

puti_ putc x =
  if x < 0
    putc 45 // -
    putip_ putc (0 - x)
  else
    putip_ putc x


// test 2-tuple match on function parameters
printl2_ puti putc (x,y) =
         puti x
         putc 32
         puti y


// test 3-tuple match on function parameters
printl3_ puti putc (x,y,z) =
         puti x
         putc 32
         puti y
         putc 32
         puti z


                
main cin cout = 
     let putc c = after 1, cout <- c
                  wait cout
     let puti = puti_ putc
     let putnl _ = putc 10
     let printl2 l = printl2_ puti putc l
     let printl3 l = printl3_ puti putc l

     // test let match on function parameters on 2-tuples
     let left_elimination (x,y) = x
     let right_elimcation (x,y) = y
     let foo (x1,y1) (z1,w1) = x1 + z1
     let foo2 (x2,y2) (z2,w2) (s2,t2) = x2 + w2 + s2
     let x3 = (1,2)
     let y3 = (3,4)
     let z3 = (7,8,9)
     let (a,b,c) = (10,11,12)
     
     printl2 x3
     putnl ()
     printl2 y3
     putnl ()
     printl3 z3
     putnl ()
     puti (left_elimination x3)
     putnl ()
     puti (right_elimcation y3)
     putnl ()
     puti (foo x3 y3)
     putnl ()
     puti (foo2 x3 y3 x3)
     putnl ()
     puti a
