putip_ putc x =
  if x < 10
    putc (x + 48)
  else
    putip_ putc (x / 10)
    putc (48 + x % 10)

puti_ putc x =
  if x < 0
    putc 45 // -
    putip_ putc (0 - x)
  else
    putip_ putc x

type MyMaybe a
  MyJust a
  MyNothing

type List a
  MyCons a (List a)
  MyNil

// Print the elements of an integer-valued list
printl_ puti putc l =
  match l
    MyCons v ll = puti v
                  putc 32 // sp
                  printl_ puti putc ll
    MyNil = putc 10 // nl

length_aux len l =
  match l
    MyCons _ ll = length_aux (len + 1) ll
    MyNil       = len

length l = length_aux 0 l

hd l = match l
         MyCons v _ = MyJust v
         MyNil      = MyNothing

tl l = match l
        MyCons _ ll = MyJust ll
        MyNil       = MyNothing

main cin cout =
  let putc c =
       after 1, cout <- c
       wait cout
  let putnl _ = putc 10
  let puti = puti_ putc
  let printl l = printl_ puti putc l
  
  let zero = MyNil
  let one = MyCons 57 MyNil
  let two = MyCons 21 one
  let three = MyCons 42 (MyCons 17 (MyCons 8 MyNil))

  putc 65 // A
  putc 10 // nl  
  printl one   // 57
  printl two   // 21 57
  printl three  // 42 17 8
  puti (length zero) // 0
  putnl ()
  puti (length one)  // 1
  putnl ()
  puti (length two)  // 2
  putnl ()
  puti (length three)  // 3
  putnl ()
  
  puti (match (hd three)
         MyJust i  = i     // 42
         MyNothing = 0)
  putnl ()
  match (tl three)
   MyJust l =
     match l
         MyJust ll = puti ll // 17
         MyNothing = putc 68
   MyNothing = putc 66
  putnl ()

  printl (match (tl three)
           MyJust l  = l
           MyNothing = MyNil)
