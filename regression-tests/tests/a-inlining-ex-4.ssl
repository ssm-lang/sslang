putd cout_ c =
  after 1, cout_ <- (c + 48)
  wait cout_

// if r has q, then we know about it. 
// if not, then we don't know
// multi lets have problems. if multiple let has an existing binding. it works. otherwise doesn't
// 
{-


-}
main cin cout = 
  let q = 5
      r = 3
//      z = r
//      z = 2 + r
//  let z = r + q
  putd cout (r)

// if binder is in rhs it knows. otherwise it doesnt 

/*main cin cout = 
  let x = 5 + 48 // to print out '5'
  after 1, cout <- x
  wait cout
  //cout <- (let y = 5 in x + y)  // is this valid sslang??
  */